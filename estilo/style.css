@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap'); /*font-family: 'Bebas Neue';*/

@font-face {
    font-family: 'idroid';
    src: url('../pacote-projeto-d010/fontes/idroid.otf') format('opentype');
    font-weight: normal;
}

/* Pseudoclasse chamada root -> é a raíz da árvore do nosso documento; tudo que eu definir nessa área vai tá disponível em todo o meu documento. É a área principal em que eu posso declarar as minhas variáveis globais */

/* Criando a paleta de cores que nós vamos usar */

/* Para criarmos as nossas variáveis, usamos o -- */

/* Dessa forma é muito útil, pois se eu mudar a paleta de cores aqui em root, ela já vai ser alterada em todo o resto do meu programa onde as variáveis estão definidas */
:root { 
    --cor0: #C5EBD6;
    --cor1: #83E1AD;
    --cor2: #3DDC84;
    --cor3: #2FA866;
    --cor4: #063D1E;
    --cor5: #052e17;

    --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: 'Bebas Neue', cursive;
    --fonte-android: 'idroid', cursive;
}

/* Definindo as configurações globais para remover as margens que tem por padrão. Para isso, basta usar o seletor com um a asterísco */
* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0); /*para chamar a variável, basta fazer isso*/
    font-family: var(--fonte-padrao);
}

a.externo::after {
    content: '\00A0↗';
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 40px;
}

header > h1 {
    color: #ffffff; 
    font-family: var(--fonte-destaque);
    margin-bottom: 20px;
    font-size: 3em;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.775);
    font-weight: normal;
}

header > p {
    color: #ffffff;
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    max-width: 500px;
    padding-right: 10px;
    padding-left: 10px;
    margin: auto;
    margin-top: 20px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.775);
}

nav {
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 7px rgba(0, 0, 0, 0.453);
}

nav > a {
    color:var(--cor0);
    padding: 10px;
    text-decoration: none;
    font-weight: bold;
    border-radius: 5px;
    transition-duration: 0.5s; /* uma transição de 5 segundos para sumir as configurações quando passa o mouse por cima */
}

nav > a:hover{
    background-color: var(--cor3);
    color: var(--cor5)
}
main {
    background-color: #ffffff;
    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.487);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

/* Esse main h1 é para todo h1 que estiver dentro de main. No caso, o h1 ainda tá dentro de article, que por sua vez está dentro de main, então seria o mesmo efeito de colocar article > h1 */

main h1 { 
    color: var(--cor5);
    font-family: var(--fonte-android);
    font-weight: normal;
    font-size: 1.8em;
}

main h2 {
    font-family: var(--fonte-android);
    color: var(--cor4);
    font-size: 1.3em;
    background-image: linear-gradient(to right, var(--cor1), transparent); /* Da cor 1 para transparente (essa técnica é interessante) */
    text-indent: 10px;
    border-radius: 40px;
    font-weight: normal;
}

main p {
    margin: 15px 0px; /* shorthand */
    text-align: justify;
    text-indent: 30px;
    line-height: 2em; /* altura da linha / espaçamento entre linhas */
    font-size: 1em;
}

main strong {
    color: var(--cor4);
    font-weight: bold;
}

main a{
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background-color: var(--cor1);
    padding: 2px 6px;
}

main a:hover {
    text-decoration: underline;
    color: var(--cor4)
}

main img{
    width: 100% /* Isso faz com que as imagens se adaptem e se espremam */
}

main img.pequena{
    max-width: 350px;/* width alterado para 50% , para que a imagem não cresça tanto quando eu aumentar o tamanho da janela*/
    display: block; /* Dessa forma eu deixo a imagem como display block, pois ele é inline por padrão */
    margin: auto; /* Deixa a imagem centralizada no meio */
}

div.video {
    background-color: var(--cor5);
    margin: 0px -20px 30px -20px; /* pq eu tenho 10px do article e 10px do main e esse 30 é para dar um espacinho em baixo*/
    padding: 20px;
    padding-bottom: 56.5%; /* isso aqui eu vou ajeitando para o vídeo não ficar com uma borda preta quando for dar o play */
    position: relative;
}

div.video > iframe {
    position: absolute; /* Quando eu coloco posicionamento absoluto, eu consigo mexer no top e no left do meu iframe */
    top: 5%;
    left: 5%;
    width: 90%; /* não fica zoado pq eu to trabalhando com porcentagem */
    height: 90%;
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.426);
}

aside > h3 {
    background-color: var(--cor4);
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px; /* Coloco o -10px justamente para ele unir com o aside que tinha 10 px de padding e por isso tava ficando um espacinho → A margem negativa tá vazando para fora → essa é uma boa estratégia */
    border-radius: 10px 10px 0px 0px; /* ordem: top-left, top-rigth, bottom-right, bottom-left */
}

aside > ul {
    list-style-type: '\2705\00A0\00A0'; /* tipo de estilo de lista → isso troca o símbolo de marcação (só é compatível com alguns navegadores)*/
    /* repara que eu coloquei só o codepoint do emoji e usei o contrabarra para que ele identifique q é o codepoint (tenho que fazer isso para quando está entre aspas)*/
    /* 00A0 é o nbsp -> é o espaço sem quebra e eu botei dois dele, só para dar um espacinho */
    list-style-position: inside; /* posição do estilo da lista: inside -> para dentro (o padrão é outside) */
    columns: 2; /* divide a lista em duas */
}

aside abbr {
    text-decoration: none;
}

footer {
    background-color: var(--cor4);
    color: #ffffff;
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer a {
    color: white;
    font-weight: bold;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: var(--cor1)
}